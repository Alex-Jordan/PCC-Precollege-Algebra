# WeBWorK problem written by Carl Yao
# Portland Community College
#
# Give a function's graph, find values of f(a); find f(   )=b. Graph is a line.
#
# Last update: Carl Yao 04/14/2014
#
# ENDDESCRIPTION

## DBsubject('Algebra')
## DBchapter('Function')
## DBsection()
## KEYWORDS('function','graph')
## DBCCSS('8.F','F-IF')
## TitleText1('')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')
## Author('Alex Jordan, Carl Yao, Chris Hughes')
## Institution('PCC')

##############################################

DOCUMENT();

loadMacros(
  "PGgraphmacros.pl",
  "PGstandard.pl",
  "MathObjects.pl",
  "PGML.pl",
  "PCCgraphMacros.pl",
  "PGcourse.pl",
);

##############################################
TEXT(beginproblem());

Context("Numeric");
Context()->noreduce('(-x)-y','(-x)+y');
$refreshCachedImages=1;

$xMin = -4;
$xMax = -$xMin;
$yMin = -4;
$yMax = -$yMin;

$p0x = random($xMin+1,$xMax-1,1);
$p0y = random($yMin+1,$yMax-1,1);
do {$p1x = random($xMin+1,$xMax-1,1);} until ($p1x!=$p0x);
do {$p1y = random($yMin+1,$yMax-1,1);} until ($p1y!=$p1x);

$m = ($p0y-$p1y)/($p0x-$p1x);
$b = -$p0x*$m + $p0y;
$func = Compute("$m*x+$b")->reduce;

($min[0], $max[0], $min[1], $max[1], $ticknum[0], $ticknum[1], $xticks_ref, $yticks_ref, $marksep[0], $marksep[1]) = NiceGraphParameters([$xMin,$xMax],[$yMin,$yMax],centerOrigin=>1);

@xticks = @$xticks_ref;
@yticks = @$yticks_ref;

for my $i (0..2) {
  $gr[$i] = init_graph($min[0],$min[1],$max[0],$max[1],
   axes=>[0,0],
   grid=>[$ticknum[0],$ticknum[1]],
   size=>[xPixels(),yPixels()]
  );
  $gr[$i]->lb('reset');
  for my $j (@xticks) {
    if (abs($j)<10**(-10)) {next;}
    $gr[$i]->lb( new Label($j, -$marksep[1]/8, $j,'black','center','top'));
  }

  for my $j (@yticks) {
    if (abs($j)<10**(-10)) {next;}
    $gr[$i]->lb( new Label($marksep[0]/8, $j, $j,'black','left','middle'));
  }

   add_functions($gr[$i], "$m*x+$b for x in [$min[0],$max[0]] using color:blue and weight:2");
}

$ALT0 = "graph of a line passing through the points ($p0x,$p0y) and ($p1x,$p1y)";

#the graph used in solution to find f(x)=?
$gr[1]->stamps( closed_circle($p0x,$p0y,'red') );
$gr[1]->lb( new Label($p0x+$marksep[1]/8,$p0y+$marksep[1]/8,"($p0x,$p0y)",'red','left','bottom'));
$gr[1]->moveTo($p0x,$min[1]);
$gr[1]->lineTo($p0x,$max[1],'red',2,'dashed');
$ALT1 = "This is the graph of a line passing through the points ($p0x,$p0y) and ($p1x,$p1y). A dashed vertical line x=$p0x crosses the line at ($p0x,$p0y).";

#the graph used in solution to find f(?)=$p1y
$gr[2]->stamps( closed_circle($p1x,$p1y,'red') );
$gr[2]->lb( new Label($p1x,$p1y+$marksep[1]/8,"($p1x,$p1y)",'red','center','bottom'));
$gr[2]->moveTo($min[0],$p1y);
$gr[2]->lineTo($max[0],$p1y,'red',2,'dashed');
$ALT2 = "This is the graph of a line passing through the points ($p0x,$p0y) and ($p1x,$p1y). A dashed horizontal line y=$p1y crosses the line at ($p1x,$p1y).";

##############################################
Context("LimitedNumeric");
BEGIN_PGML

The graph of function [`f(x)`] is shown below.

[@EnlargeImageStatementPGML()@]**


>>[@image(insertGraph($gr[0]), width=>xScreen(), height=>yScreen(), tex_size=>TeXscalar(), extra_html_tags=>"alt = '$ALT0' title = '$ALT0'") @]*<<

Based on the given graph of [`f(x)`], fill in the blanks:

    [``f([$p0x])``]=[_________]{$p0y}

    [``f(``][_______]{$p1x}[``)=[$p1y]``]

END_PGML
##############################################

BEGIN_PGML_SOLUTION

The problem [`f([$p0x])`]=? implies the function's [`x`] value is [`[$p0x]`]. On the graph, we draw a dotted vertical line at [`x=[$p0x]`], and it intersects the function's graph at [`([$p0x],[$p0y])`]. This implies [`f([$p0x])=[$p0y]`]. See the graph below.

>>[@image(insertGraph($gr[1]), width=>xScreen(), height=>yScreen(), tex_size=>TeXscalar(), extra_html_tags=>"alt = '$ALT1' title = '$ALT1'") @]*<<

The problem [`f(?)=[$p1y]`] implies the function's [`y`] value is [`[$p1y]`]. On the graph, we draw a dotted horizontal line at [`y=[$p1y]`], and it intersects the function's graph at [`([$p1x],[$p1y])`]. This implies [`f([$p1x])=[$p1y]`]. See the graph below.

>>[@image(insertGraph($gr[2]), width=>xScreen(), height=>yScreen(), tex_size=>TeXscalar(), extra_html_tags=>"alt = '$ALT2' title = '$ALT2'") @]*<<

END_PGML_SOLUTION


ENDDOCUMENT();
